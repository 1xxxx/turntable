{"version":3,"sources":["node_modules/browser-pack/_prelude.js","main.js","js/main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","$","fn","turntable","options","divideContainer","images","initialLength","undefined","dividend","settings","axis","$turntable","height","width","sectionLength","j","sections","min","max","index","$listItems","this","children","extend","defaults","callback","each","append","data","load","parent","addClass","window","resize","on","offset","position","pageY","top","pageX","left","removeClass","eq","jQuery"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GCCA,cCAA,SAAUK,GAERA,EAAEC,GAAGC,UAAY,SAASC,GAaxB,QAASC,GAAgBC,GAEvB,GAAIC,GAAgBC,OAChBC,EAAWH,EAAOR,MAGpBS,GADoB,MAAlBG,EAASC,KACKC,EAAWC,SAEXD,EAAWE,OAM7B,KAAK,GAHDC,GAAgBR,EAAgBE,EAG3BO,EAAI,EAAGA,EAAIV,EAAOR,OAAQkB,IACjCC,EAASD,IACPE,IAAKH,EAAgBC,EACrBG,IAAKJ,EAAiBA,EAAgBC,EACtCI,MAAOJ,GA1Bb,GAAIK,GAAapB,EAAE,KAAMqB,MAAMC,WAC3Bb,EAAWT,EAAEuB,UAAWvB,EAAEC,GAAGC,UAAUsB,SAAUrB,GACjDQ,EAAaX,EAAEqB,MACfL,IAgDJ,OAnBA,UAAuBS,GACrBL,EAAWM,KAAK,WACd1B,EAAEqB,MAAMM,OAAO,aAAe3B,EAAEqB,MAAMO,KAAK,UAAY,WAK3D5B,EAAE,qBAAsBW,GAAYkB,KAAK,WACvC7B,EAAEqB,MAAMS,SAASC,SAAS,UAC1B3B,EAAgBgB,KAIlBpB,EAAEgC,QAAQC,OAAO,WACf7B,EAAgBgB,KAKXT,EAAWuB,GAAG,YAAa,SAAUrD,GAC1C,GAAIsD,GAASnC,EAAEqB,MAAMc,SACjBC,EAAW7B,MAEb6B,GADoB,MAAlB3B,EAASC,KACA7B,EAAEwD,MAAQF,EAAOG,IAEjBzD,EAAE0D,MAAQJ,EAAOK,KAG9BxC,EAAE0B,KAAKV,EAAU,WACXoB,GAAYf,KAAKJ,KAAOmB,GAAYf,KAAKH,MAC3CE,EAAWqB,YAAY,UACvBrB,EAAWsB,GAAGrB,KAAKF,OAAOY,SAAS,gBAM3C/B,EAAEC,GAAGC,UAAUsB,UACbd,KAAM,MAGPiC,kBDEQ","file":"main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n(function ($) {\n\n  $.fn.turntable = function (options) {\n\n    // variable declarations\n    'use strict';\n\n    var $listItems = $('ul', this).children(),\n        settings = $.extend({}, $.fn.turntable.defaults, options),\n        $turntable = $(this),\n        sections = [];\n\n    // splits container based on\n    // amount of li's in turntable\n    function divideContainer(images) {\n\n      var initialLength = undefined,\n          dividend = images.length;\n\n      if (settings.axis === 'y') {\n        initialLength = $turntable.height();\n      } else {\n        initialLength = $turntable.width();\n      }\n\n      var sectionLength = initialLength / dividend;\n\n      // creates array of value pairs with min and max ranges\n      for (var j = 0; j < images.length; j++) {\n        sections[j] = {\n          min: sectionLength * j,\n          max: sectionLength + sectionLength * j,\n          index: j\n        };\n      }\n    }\n\n    //loads images one at a time on page load\n    (function appendImages(callback) {\n      $listItems.each(function () {\n        $(this).append('<img src=\"' + $(this).data(\"imgSrc\") + '\">');\n      });\n    })();\n\n    // divides container once image is loaded\n    $(\"li:first-child>img\", $turntable).load(function () {\n      $(this).parent().addClass('active');\n      divideContainer($listItems);\n    });\n\n    //redivides window on resize\n    $(window).resize(function () {\n      divideContainer($listItems);\n    });\n\n    // finds mouse position and appends body\n    // based on location\n    return $turntable.on(\"mousemove\", function (e) {\n      var offset = $(this).offset();\n      var position = undefined;\n      if (settings.axis === 'y') {\n        position = e.pageY - offset.top;\n      } else {\n        position = e.pageX - offset.left;\n      }\n      // loop through array and find correct range pair\n      $.each(sections, function () {\n        if (position >= this.min && position <= this.max) {\n          $listItems.removeClass('active');\n          $listItems.eq(this.index).addClass(\"active\");\n        }\n      });\n    });\n  };\n\n  $.fn.turntable.defaults = {\n    axis: 'x'\n  };\n})(jQuery);\n\n},{}]},{},[1])\n\n","\n(function($){\n\n  $.fn.turntable = function(options){\n\n    // variable declarations\n    'use strict';\n\n    var $listItems = $('ul', this).children(),\n        settings = $.extend({}, $.fn.turntable.defaults, options),\n        $turntable = $(this),\n        sections = [];\n\n\n    // splits container based on\n    // amount of li's in turntable\n    function divideContainer(images) {\n\n      var initialLength = undefined,\n          dividend = images.length;\n\n      if (settings.axis === 'y') {\n        initialLength = $turntable.height();\n      } else {\n        initialLength = $turntable.width();\n      }\n\n      var sectionLength = initialLength / dividend;\n\n      // creates array of value pairs with min and max ranges\n      for (var j = 0; j < images.length; j++) {\n        sections[j] = {\n          min: sectionLength * j,\n          max: sectionLength + (sectionLength * j),\n          index: j\n        };\n      }\n    }\n\n    //loads images one at a time on page load\n    (function appendImages(callback) {\n      $listItems.each(function () {\n        $(this).append('<img src=\"' + $(this).data(\"imgSrc\") + '\">');\n      });\n    })();\n\n    // divides container once image is loaded\n    $(\"li:first-child>img\", $turntable).load(function () {\n      $(this).parent().addClass('active');\n      divideContainer($listItems);\n    });\n\n    //redivides window on resize\n    $(window).resize(function(){\n      divideContainer($listItems);\n    });\n\n    // finds mouse position and appends body\n    // based on location\n    return $turntable.on(\"mousemove\", function (e) {\n      var offset = $(this).offset();\n      var position = undefined;\n      if (settings.axis === 'y') {\n        position = e.pageY - offset.top;\n      } else {\n        position = e.pageX - offset.left;\n      }\n      // loop through array and find correct range pair\n      $.each(sections, function () {\n        if (position >= this.min && position <= this.max) {\n          $listItems.removeClass('active');\n          $listItems.eq(this.index).addClass(\"active\");\n        }\n      });\n    });\n  };\n\n  $.fn.turntable.defaults = {\n    axis: 'x'\n  };\n\n})(jQuery);\n"],"sourceRoot":"/source/"}